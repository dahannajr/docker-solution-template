version: "3.8"

services:
  localstack:
    container_name: ${MAIN_CONTAINER_NAME:-localstack_main}
    image: ${IMAGE_NAME:-localstack/localstack}
    ports:
      - "127.0.0.1:53:53"                # only required for Pro (DNS)
      - "127.0.0.1:53:53/udp"            # only required for Pro (DNS)
      - "127.0.0.1:443:443"              # only required for Pro (LocalStack HTTPS Edge Proxy)
      - "127.0.0.1:4510-4559:4510-4559"  # external service port range
      - "127.0.0.1:4566:4566"            # LocalStack Edge Proxy
    environment:
      # # Core 
      - DEBUG=${DEBUG:-1}
      - EAGER_SERVICE_LOADING=${EAGER_SERVICE_LOADING:-0}
      - EXTERNAL_SERVICE_PORTS_START=${EXTERNAL_SERVICE_PORTS_START:-4510}
      - EXTERNAL_SERVICE_PORTS_END=${EXTERNAL_SERVICE_PORTS_END:-4560}
      - HOSTNAME=${HOSTNAME:-localhost}
      - HOSTNAME_EXTERNAL=${HOSTNAME_EXTERNAL:-localhost}
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY:-}
      - MAIN_CONTAINER_NAME=${MAIN_CONTAINER_NAME:-localstack_main}
      - PERSISTENCE=${PERSISTENCE:-0}
      - PERSIST_ALL=${PERSIST_ALL:-true}
      - LS_LOG=${LS_LOG:-debug}
      - MOCK_UNIMPLEMENTED=${MOCK_UNIMPLEMENTED:-1}

      # # AppSync
      - GRAPHQL_ENDPOINT_STRATEGY=${GRAPHQL_ENDPOINT_STRATEGY:-domain}

      # # Batch
      - BATCH_DOCKER_FLAGS=${BATCH_DOCKER_FLAGS:-}

      # # Bigdata
      - BIGDATA_DOCKER_FLAGS=${BIGDATA_DOCKER_FLAGS:-}
      - BIGDATA_DOCKER_NETWORK=${BIGDATA_DOCKER_NETWORK:-}

      # # DynamoDB
      - DYNAMODB_CORS=${DYNAMODB_CORS:-*}
      - DYNAMODB_DELAY_TRANSIENT_STATUSES=${DYNAMODB_DELAY_TRANSIENT_STATUSES:-0}
      - DYNAMODB_ERROR_PROBABILITY=${DYNAMODB_ERROR_PROBABILITY:-0.0}
      - DYNAMODB_HEAP_SIZE=${DYNAMODB_HEAP_SIZE:-256m}
      - DYNAMODB_IN_MEMORY=${DYNAMODB_IN_MEMORY:-0}
      - DYNAMODB_SHARE_DB=${DYNAMODB_SHARE_DB:-0}
      - DYNAMODB_OPTIMIZE_DB_BEFORE_STARTUP=${DYNAMODB_OPTIMIZE_DB_BEFORE_STARTUP:-0}

      # # EKS
      - EKS_LOADBALANCER_PORT=${EKS_LOADBALANCER_PORT:-8081}

      # # IAM
      - ENFORCE_IAM=${ENFORCE_IAM:-1}
      - IAM_SOFT_MODE=${IAM_SOFT_MODE:-0}

      # # Kinesis
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY:-0.0}
      - KINESIS_INITIALIZE_STREAMS=${KINESIS_INITIALIZE_STREAMS:-}
      - KINESIS_LATENCY=${KINESIS_LATENCY:-500}
      - KINESIS_SHARD_LIMIT=${KINESIS_SHARD_LIMIT:-100}

      # # Lambda
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR:-docker}
      - LAMBDA_STAY_OPEN_MODE=${LAMBDA_STAY_OPEN_MODE:-1}
      - LAMBDA_REMOTE_DOCKER=${LAMBDA_REMOTE_DOCKER:-true}
      - LAMBDA_TRUNCATE_STDOUT=${LAMBDA_TRUNCATE_STDOUT:-2000}
      - BUCKET_MARKER_LOCAL=${BUCKET_MARKER_LOCAL:-lambda-src-bucket}
      - LAMBDA_CODE_EXTRACT_TIME=${LAMBDA_CODE_EXTRACT_TIME:-25}
      - LAMBDA_DOCKER_NETWORK=${LAMBDA_DOCKER_NETWORK:-localstack}
      # - LAMBDA_DOCKER_DNS=${LAMBDA_DOCKER_DNS:-}
      # - LAMBDA_DOCKER_FLAGS=${LAMBDA_DOCKER_FLAGS:-}
      # - LAMBDA_CONTAINER_REGISTRY=${LAMBDA_CONTAINER_REGISTRY:-}
      # - LAMBDA_REMOVE_CONTAINERS=${LAMBDA_REMOVE_CONTAINERS:-}
      # - LAMBDA_FALLBACK_URL=${LAMBDA_FALLBACK_URL:-}
      # - LAMBDA_FORWARD_URL=${LAMBDA_FORWARD_URL:-}
      # - LAMBDA_JAVA_OPTS=${LAMBDA_JAVA_OPTS:-}
      - HOSTNAME_FROM_LAMBDA=${HOSTNAME_FROM_LAMBDA:-localstack}
      - LAMBDA_XRAY_INIT=${LAMBDA_XRAY_INIT:-1}
      - SYNCHRONOUS_KINESIS_EVENTS=${SYNCHRONOUS_KINESIS_EVENTS:-1}

      # # Open Search
      # - OPENSEARCH_CUSTOM_BACKEND=${OPENSEARCH_CUSTOM_BACKEND:-}
      - OPENSEARCH_MULTI_CLUSTER=${OPENSEARCH_MULTI_CLUSTER:-0}
      - OPENSEARCH_ENDPOINT_STRATEGY=${OPENSEARCH_ENDPOINT_STRATEGY:-domain}

      # # RDS
      - RDS_PG_CUSTOM_VERSIONS=${RDS_PG_CUSTOM_VERSIONS:-1}

      # # S3
      - S3_MOUNT=${S3_MOUNT:-./volumes/s3-mount}

      # # StepFunctions
      - STEPFUNCTIONS_LAMBDA_ENDPOINT=${STEPFUNCTIONS_LAMBDA_ENDPOINT:-default}

      # # SQS
      - SQS_DELAY_PURGE_RETRY=${SQS_DELAY_PURGE_RETRY:-0}
      - SQS_DELAY_RECENTLY_DELETED=${SQS_DELAY_RECENTLY_DELETED:-0}
      - SQS_ENDPOINT_STRATEGY=${SQS_ENDPOINT_STRATEGY:-domain}

      # # Security
      - DISABLE_CORS_HEADERS=${DISABLE_CORS_HEADERS:-0}
      - DISABLE_CORS_CHECKS=${DISABLE_CORS_CHECKS:-0}
      - DISABLE_CUSTOM_CORS_S3=${DISABLE_CUSTOM_CORS_S3:-0}
      - DISABLE_CUSTOM_CORS_APIGATEWAY=${DISABLE_CUSTOM_CORS_APIGATEWAY:-0}
      - EXTRA_CORS_ALLOWED_ORIGINS=${EXTRA_CORS_ALLOWED_ORIGINS:-}
      - EXTRA_CORS_ALLOWED_HEADERS=${EXTRA_CORS_ALLOWED_HEADERS:-}
      - EXTRA_CORS_EXPOSE_HEADERS=${EXTRA_CORS_EXPOSE_HEADERS:-}
      - ENABLE_CONFIG_UPDATES=${ENABLE_CONFIG_UPDATES:-0}

      # # Emails
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASS=${SMTP_PASS:-}
      - SMTP_EMAIL=${SMTP_EMAIL:-}

      # # Provider
      - KINESIS_PROVIDER=${KINESIS_PROVIDER:-kinesis-mock}
      - KMS_PROVIDER=${KMS_PROVIDER:-moto}
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-}:/var/lib/localstack"
      - "${DOCKER_SOCK:-}:/var/run/docker.sock"
    networks:
      - localstack
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - localstack    
networks:
  localstack:
    external: false
    driver: bridge
    name: localstack